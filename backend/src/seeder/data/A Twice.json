{
    "problem": {
        "title": "Twice",
        "description": "Kinich wakes up to the start of a new day. He turns on his phone, checks his mailbox, and finds a mysterious present. He decides to unbox the present. Kinich unboxes an array a with n integers. Initially, Kinich's score is 0 . He will perform the following operation any number of times: Select two indices i and j ( 1 ≤ i < j ≤ n ) such that neither i nor j has been chosen in any previous operation and a i = a j . Then, add 1 to his score. Output the maximum score Kinich can achieve after performing the aforementioned operation any number of times.",
        "input_specification": "The first line contains an integer tt (1≤t≤5001≤t≤500) — the number of test cases.The first line of each test case contains an integer nn (1≤n≤201≤n≤20) — the length of aa.The following line of each test case contains nn space-separated integers a1,a2,…,ana1,a2,…,an (1≤ai≤n1≤ai≤n).",
        "output_specification": "For each test case, output the maximum score achievable on a new line.",
        "time_limit": "1 second",
        "memory_limit": "256 megabytes",
        "tags": [
            "implementation"
        ],
        "examples": [
            {
                "input": "5\n1\n1\n2\n2 2\n2\n1 2\n4\n1 2 3 1\n6\n1 2 3 1 2 3",
                "output": "0\n1\n0\n1\n3\n"
            }
        ],
        "difficulty": "easy"
    },
    "solution": {
        "description": "We want to count how many times we can choose ii and jj such that ai=ajai=aj. Suppose fxfx stores the frequency of xx in aa. Once we choose ai=aj=xai=aj=x, fxfx is subtracted by 22. Thus, the answer is the sum of ⌊fx2⌋⌊fx2⌋ over all xx.",
        "code": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(sum([a.count(x) // 2 for x in range(n + 1)]))"
    }
}